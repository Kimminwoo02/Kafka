[SSE = Server Sent Event]
 - 서버에서 웹브라우저로 데이터를 보내기
 - 서버 -> 클라이언트로 메세지를 보낼 수 있는 기술

 주요 기술들
 1) Polling
    => 일정 주기를 가지고 서버의 API를 요청한다.
    => 실시간으로 데이터가 업데이트 될 수 없다.
    => 불필요한 요청이 발생한다. 서버 부하가 발생할 수 있다.


 2) Long Polling
    => 서버로 요청이 들어오는 경우 요청한 데이터가 업데이트되면 웹브라우저에서 응답을 보낸다.
    => 업데이트가 발생하는 경우 요청이 발생되며 서버 부하가 발생할 수 있다.

 3) SSE
    => 단방향
    => 클라이언트에서 서버에 구독신청을 하면 서버가 적절한 상황이 됐을 때 메시지를 보내는 기술
    => 서버 -> 클라이언트
    => 채팅은 부적합

 4) Web Socket
    => 양방향
    => 클라이언트 -> 서버, 서버 -> 클라이언트
    => 채팅 같은 양방향 소통은 웹소켓으로 구현


1. SSE
    - 서버에서 클라이언트로 text Message를 보내는 웹 어플리케이션 기술
    - HTML5의 표준기술
    - 로그인을 하거나 구독신청을 사용자가 하면 알림을 받을 수 있는 상태.
    - UTF-8로 인코딩된 문자열만 지원한다. (JSON으로 작업하는 것이 일반적)
    - Explorer를 제외하고 모든 브라우저에서 지원
    - 클라이언트와 서버쪽 모두 구현

    통신 흐름
    1) 클라이언트가 구독요청
        - 클라이언트가 서버에서 보내오는 이벤트를 구독하겠다고 먼저 요청을 보내야 한다.
        보통 로그인을 하거나 구독신청 요청에 승인하는 경우 요청이 발생
        - 이벤트의 미디어 타입은 text/event-stream이 표준이다.
                            ------------ MIME타입

    2) 서버가 응답
    3) 이벤트 전달
        - 구독신청을 한 클라이언트에 서버가 비동기적으로 메세지를 전송
        - UTF-8로 인코딩된 데이터만 전송할 수 있다.


    통신을 위한 준비
    1) 클라이언트
        - 웹소켓처럼 먼저 요청을 보내야 한다.(구독 신청)
        - EventSource객체를 활용
        - EventSource객체를 생성하면서 시작

        [실행흐름]
        - 클라이언트가 구독요청을 한다.
        - EventSource객체를 생성 하는것이 구독요청 하는 것이다.(Path를 설정)
        - 서버가 보내오는 이벤트에 반응할 수 있도록 설정
          -> EventSource객체에 이벤트에 반응할 수 있도록 등록
          SSE객체에 addEventListener를 이용해서 이벤트가 발생됐을 때 처리할 수 있도록 한다.
          -> 이벤트명은 서버가 SseEmitter 객체를 보낼 때 설정한 이벤트명으로 처리
          -> sse.addEventListener("이벤트명",function(){
                // 서버가 메시지를 전송하면 처리할 일들
                .......

          })


    2) 서버
        - 스프링에서는 SSEEmitter 객체를 지원
        - 컨트롤러에서 SSEEmitter 객체를 반환해야 SSE 통신을 할 수 있는 스트림객체가 생성된다.
        - SSEEmitter는 구독신청을 한 클라이언트에 대한 정보를 담고 있는 객체이고 클라이언트와 통신할 수 있는 객체이다.
        - 만료시간 셋팅할 수 있다.

        [실행흐름]
        - 클라이언트가 구독요청을 하면 SseEmitter객체를 만들어서 리턴
        - 서버쪽에서 지속적으로 통신하기 위해서 SseEmitter 객체를 보관
        - 최초 요청시에 503번 에러가 발생하지 않도록 더미데이터를 클라이언트에 전송
                                                     ------------
                                                     send 메소드이용
                                                     이벤트,. 이벤트명, 클라이언트에 전송할 데이터
        - 클라이언트 상태에 따른 콜백메소드를  구현