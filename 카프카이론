카프카

토픽
- 클러스터 안에 있는 데이터 스트림이다. 이름을 지정할 수 있다. 데이터베이스로 치면 테이블과 비슷하다.(제약조건x)
- 여러 타입의 포맷을 지원(json, 텍스트등)
- 토픽 안의 메세지 순서를 데이터 스트림이라 한다.
- 토픽에서 데이터를 읽기 위해 컨슈머를 사용한다.

파티션 
토픽을 파티션 단위로 나눌 수 있다.
- 메세지에서 나온 데이터는 파티션으로 간다.
- 데이터는 자동으로 증가하는 id를 가지는데 이를 파티션 오프셋이라한다.
- immutable한 특성을 가진다.
- 카프카의 데이터는 일정한 시간동안 유지된다.

 메세지의 순서는 한 파티션 안에서만 보장된다.

 프로듀서
 토픽과 파티션에 데이터를 전달하는 개체로, 자신이 어떤 파티션에 기록하는지 미리 알고있다.
 - 브로커(서버)가 그걸 갖게 된다.
 - 파티션이 고장나면 어떻게 복구할지 프로듀서가 알게 된다.
 - 로드벨런싱을 가지고 있다.
 - 메세지 키를 가지고 있다. 메세지 자체에 데이터를 보유하고있고 여기에 키를 추가할 수 있다는 뜻
    키가 널이라면 라운드 로빈 방식으로 전달된다.
 - 동일한 키를 공유하는 모든 메세지들은 해싱 전략덕분에 같은 파티션에 기록된다.
 
 메세지 구성
 키-바이너리, 값 - 바이너리
 압축 타입(gzip,snappy,)
 헤더(선택사항)
 파티션+ 오프셋
 타임스탬프


Message Seriralizer
- 메세지를 생성하는 방법이다.
- 입력과 출력값으로 바이트로 받는다. 
- 직렬화는 데이터나 객체를 바이트로 변환한다는 의미이다.
- 값과 키에만 사용된다.
